#version 460

// Define the size of the workgroup (number of threads per group)
layout(local_size_x = 1024) in;

// Binding locations for input and output buffers
layout(binding = 0) buffer InputBufferA {
    uint dataA[];
};

layout(binding = 1) buffer OutputBuffer {
    uint result[];
};

uint fibonacci(uint n) {
	if(n <= 1){
		return n;
	}
	uint curr = 1;
	uint prev = 1;
	for(uint i = 2; i < n; ++i) {
		uint temp = curr;
		curr += prev;
		prev = temp;
	}
	return curr;
}

void main() {
    // Calculate the global index for this thread
    uint idx = gl_GlobalInvocationID.x;

    // Perform element-wise addition
    result[idx] = fibonacci(dataA[idx]);
}
